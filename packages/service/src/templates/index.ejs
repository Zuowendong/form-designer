<template>
  <%# 是否显示弹窗 r: read | c: create | u:update %>
  <% if(config.isDialog) { %>
    <el-dialog v-model="modelValue" title="<% if(config.type === 'r') { %>查看<% } else if(config.type === 'c') { %>新增<% } else if(config.type === 'u') { %>更新<% } %>" :close-on-click-modal="false" @close="onClose">
  <% } -%>
    <%# 表单 %>
    <el-form ref="formRef" :model="formData" label-width="120px" <% if(config.type !== 'r') { %>:rules="rules"<% } %>>
      <% config.items.forEach(function(item) { %>
        <el-form-item label="<%= item.label %>" <% if(config.type !== 'r') { %>prop="<%= item.field %>"<% } %>>
          <% if(config.type === 'r') { %>
            <span>{{ formData.<%= item.field %> }}</span>
          <% } else { %>
            <%# cu: input select timepicker checkbox radio upload %>

            <% if(item.type === 'input') { %>
              <el-input v-model="formData.<%= item.field %>" />
            <% } else if(item.type === 'select') { %>
              <el-select v-model="formData.<%= item.field %>" placeholder="please select your zone">
                <el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value" />
              </el-select>
            <% } %>
            
          <% } %>
        </el-form-item>
      <% }); _%>
      <% if(!config.isDialog && config.type !== 'r') { %>
        <el-form-item>
          <el-button @click="onClose">取消</el-button>
          <el-button type="primary" @click="submitHandle">确定</el-button>
        </el-form-item>
      <% } %>
    </el-form>
  <% if(config.isDialog) { %>
    <% if(config.type !== 'r') { %>
      <template #footer>
        <div class="dialog-footer">
          <el-button @click="onClose">取消</el-button>
          <el-button type="primary" @click="submitHandle">确定</el-button>
        </div>
      </template>
    <% } %>
  </el-dialog>
  <% } %>
</template>

<script setup>
  import { reactive, ref, watch } from 'vue';
  import { ElMessage } from 'element-plus';

  let formData = ref({});

<% if(config.isDialog) { %>
  const props = defineProps({
    modelValue: { type: Boolean, default: false }
  });
  let { modelValue } = toRefs(props);
  const emit = defineEmits(['update:modelValue']);

  watch(
    () => props.modelValue,
    (val) => {
      if (val) console.log('获取详情');
    }
  );
<% } %>

<%# 渲染下拉框数据 %>
<% config.items.forEach(function(item) { _%>
  <% if(item.type === 'select') { _%>
    let options = reactive([
    <% item.options.forEach(function(opItem) { _%>
      {label: "<%= opItem.label %>", value: "<%= opItem.value %>"},
    <% }) %>
    ])
  <% } %>
<% }) %>

<% if(config.isDialog || config.type !== 'r') { %>
  const onClose = () => {
    <% if(config.isDialog) { %>
      emit('update:modelValue', false);
    <% } _%>
    formData.value = {};
  };
<% } %>

<% if(config.type !== 'r') { %>
  const submitHandle = () => {};
<% } %>
</script>

<style scoped></style>